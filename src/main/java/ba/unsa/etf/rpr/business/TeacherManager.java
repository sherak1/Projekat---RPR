package ba.unsa.etf.rpr.business;


import ba.unsa.etf.rpr.dao.DaoFactory;
import ba.unsa.etf.rpr.domain.Teacher;
import ba.unsa.etf.rpr.exceptions.HappyCourseException;


public class TeacherManager {


    public static Teacher add(Teacher teacher, String confirmPassword) throws HappyCourseException {

        // Checking if all fields are not null
        if (teacher.getFirst_name().equals(null) ||
                teacher.getLast_name().equals(null) ||
                teacher.getEmail().equals(null) ||
                teacher.getUsername().equals(null) ||
                teacher.getPassword().equals(null) ||
                confirmPassword.equals(null)) {
            throw new HappyCourseException("Each field must be filled!");
        }

        if (teacher.getId() != 0) {
            throw new HappyCourseException("ID is autogenerated");
        }

         if (teacher.getPassword().length() < 8 &&
                !(teacher.getPassword().contains("&") || teacher.getPassword().contains("-"))) {
            throw new HappyCourseException("Password must contain at least eight characters, number and special character");
        }

        // Checking if username or email already exist
        try {
            return DaoFactory.teacherDao().add(teacher);
        } catch (HappyCourseException e) {
            if (e.getMessage().contains("email")) {
                throw new HappyCourseException("Employee with same email already exist!");
            }
            if (e.getMessage().contains("username")) {
                throw new HappyCourseException("Employee with same username already exist!");
            }
            throw e;
        }

    }
    public Teacher loginSearch(String username, String password) throws HappyCourseException {

       Teacher teacher = DaoFactory.teacherDao().getByUsername(username);
        if (username == null || password.equals("")) {
            throw new HappyCourseException("Each field must be filled!");
        }

        if (!teacher.getPassword().equals(password)) {
            throw new HappyCourseException("Password is not correct!");
        }

        return teacher;
    }



}